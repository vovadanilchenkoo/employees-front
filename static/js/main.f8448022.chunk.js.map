{"version":3,"sources":["components/ErrorBoundary/ErrorBoundary.js","config.js","components/Header/Header.js","views/Main/Main.js","views/SignIn/SignIn.js","views/SignUp/SignUp.js","views/CreateEmployee/CreateEmployee.js","views/EmployeesList/EmployeesList.js","views/Profile/Profile.js","App.js","serviceWorker.js","index.js"],"names":["ErrorBoundary","props","state","hasError","error","errorInfo","console","log","this","children","React","Component","config","apiUrl","Header","useState","window","localStorage","getItem","accessToken","setAccessToken","history","useHistory","useEffect","logout","a","fetch","headers","request","json","push","removeItem","className","to","onClick","Main","SignIn","email","setEmail","password","setPassword","setData","e","target","id","value","signIn","preventDefault","payload","JSON","stringify","method","body","signInUser","response","token","setItem","onChange","type","htmlFor","aria-autoComplete","SignUp","signUp","createUser","res","name","CreateEmployee","position","salary","start_working_at","work_days","out_days","employee","setEmployee","setEmployeeData","persist","property","createEmployee","data","EmployeesList","employees","setEmployees","rows","fetchData","deleteEmployee","fetchEmployees","employeesList","map","el","key","Profile","profileData","setProfileData","userId","match","params","editField","closest","querySelector","classList","toggle","inputHandler","sendEmployeeData","placeholder","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f8448022.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n    console.log(error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children; \r\n  }\r\n}\r\n\r\nexport default ErrorBoundary","export const config = {\r\n    apiUrl: 'http://localhost:3001'\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { config } from '../../config'\r\n\r\nconst Header = () => {\r\n    const [accessToken, setAccessToken] = useState(window.localStorage.getItem('accessToken'))\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n      setAccessToken(window.localStorage.getItem('accessToken'))\r\n    })\r\n\r\n    const logout = async () => {\r\n        const request = await fetch(`${config.apiUrl}/user/logout`, {\r\n            headers: {\r\n                'x-access-token': `${window.localStorage.getItem('accessToken')}`\r\n            }\r\n        })\r\n        const response = await request.json()\r\n\r\n        history.push('/')\r\n        window.localStorage.removeItem('accessToken')\r\n    }\r\n\r\n    return (\r\n        <header>\r\n        <nav className=\"nav\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"content__page-link\">Main</Link>\r\n                {\r\n                    accessToken !== null ?\r\n                        <>\r\n                            <Link to=\"/employees-table\" className=\"content__page-link\">Employees table</Link>\r\n                            <Link to=\"/create-employee\" className=\"content__page-link\">Create employee</Link>\r\n                            <Link to=\"/logout\" onClick={logout} className=\"content__page-link\">Logout</Link>\r\n                        </> :\r\n                        <>\r\n                            <Link to=\"/sign-in\" className=\"content__page-link\">\r\n                                <i className=\"material-icons\">input</i>\r\n                                Sign in\r\n                            </Link>\r\n                            <Link to=\"/sign-up\" className=\"content__page-link\">\r\n                                <i className=\"material-icons\">group_add</i>\r\n                                Sign up\r\n                            </Link>\r\n                        </>\r\n                }\r\n            </div>\r\n        </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Main = () => (\r\n    <h1 className=\"center-align\">Welcome to react CRUD app using Node, PostgreSQL, Redis on backend</h1>\r\n)\r\n\r\nexport default Main","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './SignIn.sass'\r\nimport { config } from '../../config'\r\n\r\nconst SignIn = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const history = useHistory()\r\n\r\n    const setData = (e) => {\r\n        const targetEl = e.target.id\r\n        if (targetEl === 'email') {\r\n            setEmail(e.target.value)\r\n        } else {\r\n            setPassword(e.target.value)\r\n        }\r\n    }\r\n\r\n    const signIn = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const payload = JSON.stringify({\r\n            email, password\r\n        })\r\n        const signInUser = await fetch(`${config.apiUrl}/user/sign-in`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: payload\r\n        })\r\n        const response = await signInUser.json()\r\n\r\n        if (response.token) {\r\n            window.localStorage.setItem('accessToken', response.token)\r\n            history.push('/employees-table')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-in-wrap\">\r\n            <h1 className=\"center-align\">Sign in</h1>\r\n            <form className=\"sign-in-form\">\r\n                <div className=\"sign-in-item input-field col s6\">\r\n                    <input id=\"email\" onChange={setData} type=\"text\" />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n                <div className=\"sign-in-item input-field col s6\">\r\n                    <input id=\"password\" onChange={setData} type=\"password\" aria-autoComplete=\"list\" />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n                <button \r\n                    type=\"submit\"\r\n                    onClick={signIn}\r\n                    className=\"btn waves-effect waves-light\" \r\n                >\r\n                    Submit\r\n                    <i className=\"material-icons right\">send</i>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './SignUp.sass'\r\nimport { config } from '../../config'\r\n\r\nconst SignUp = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const history = useHistory()\r\n\r\n    const setData = (e) => {\r\n        const targetEl = e.target.id\r\n        if (targetEl === 'email') {\r\n            setEmail(e.target.value)\r\n        } else {\r\n            setPassword(e.target.value)\r\n        }\r\n    }\r\n\r\n    const signUp = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const payload = JSON.stringify({\r\n            email, password\r\n        })\r\n        const createUser = await fetch(`${config.apiUrl}/create-user`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: payload\r\n        })\r\n        const res = await createUser.json()\r\n        \r\n        if (res.token) {\r\n            window.localStorage.setItem('accessToken', res.token)\r\n            history.push('/employees-table')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"sign-up-wrap\">\r\n            <h1 className=\"center-align\">Sign up</h1>\r\n            <form className=\"sign-up-form\">\r\n                <div className=\"sign-up-item input-field col s6\">\r\n                    <input id=\"email\" onChange={setData} type=\"text\" />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                </div>\r\n                <div className=\"sign-up-item input-field col s6\">\r\n                    <input id=\"password\" onChange={setData} type=\"password\" />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                </div>\r\n                <button \r\n                    type=\"submit\" \r\n                    name=\"action\"\r\n                    onClick={signUp}\r\n                    className=\"btn waves-effect waves-light\" \r\n                >\r\n                    Submit\r\n                    <i className=\"material-icons right\">send</i>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","import React, { useState } from 'react'\r\nimport './CreateEmployee.sass'\r\nimport { config } from '../../config'\r\n\r\nconst CreateEmployee = () => {\r\n    const [employee, setEmployee] = useState({\r\n        name: '',\r\n        position: '', \r\n        salary: '', \r\n        start_working_at: '', \r\n        work_days: '', \r\n        out_days: ''\r\n    })\r\n\r\n    const setEmployeeData = (e) => {\r\n        e.persist()\r\n        const property = e.target.id\r\n        setEmployee((state) => {\r\n            return {\r\n                ...state,\r\n                [property]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    const createEmployee = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const payload = JSON.stringify(employee)\r\n        const data = await fetch(`${config.apiUrl}/create-employee`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'x-access-token': `${window.localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: payload\r\n        })\r\n        const response = await data.json()\r\n        console.log(response)\r\n    } \r\n\r\n    return (\r\n        <div className=\"create-employee-wrap\">\r\n            <h1>Create employee</h1>\r\n            <form className=\"create-employee-form\">\r\n                <div className=\"create-employee-item input-field col s6\">\r\n                    <input onChange={setEmployeeData} id=\"name\" type=\"text\" />\r\n                    <label htmlFor=\"name\">Name</label>\r\n                </div>\r\n                <div className=\"create-employee-item input-field col s6\">\r\n                    <input onChange={setEmployeeData} id=\"position\" type=\"text\" />\r\n                    <label htmlFor=\"position\">Position</label>\r\n                </div>\r\n                <div className=\"create-employee-item input-field col s6\">\r\n                    <input onChange={setEmployeeData} id=\"salary\" type=\"number\" />\r\n                    <label htmlFor=\"salary\">Salary</label>\r\n                </div>\r\n                <div className=\"create-employee-item input-field col s6\">\r\n                    <input onChange={setEmployeeData} id=\"start_working_at\" type=\"date\" />\r\n                    <label htmlFor=\"start_working_at\">Start working at</label>\r\n                </div>\r\n                <div className=\"create-employee-item input-field col s6\">\r\n                    <input onChange={setEmployeeData} id=\"work_days\" type=\"number\" />\r\n                    <label htmlFor=\"work_days\">Work days</label>\r\n                </div>\r\n                <div className=\"create-employee-item input-field col s6\">\r\n                    <input onChange={setEmployeeData} id=\"out_days\" type=\"text\" />\r\n                    <label htmlFor=\"out days\">Out days</label>\r\n                </div>\r\n                <button \r\n                    type=\"submit\"\r\n                    onClick={createEmployee} \r\n                    className=\"btn waves-effect waves-light\" \r\n                >\r\n                    Submit\r\n                    <i className=\"material-icons right\">send</i>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateEmployee","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { config } from '../../config'\r\nimport './EmployeesList.sass'\r\n\r\nconst EmployeesList = () => {\r\n  const [employees, setEmployees] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const data = await fetch(`${config.apiUrl}/employees-list`, {\r\n        headers: {\r\n          'x-access-token': `${window.localStorage.getItem('accessToken')}`\r\n        }\r\n      })\r\n      const response = await data.json()\r\n      setEmployees(response.rows)\r\n    }\r\n\r\n    fetchData()\r\n  }, [])\r\n\r\n  const deleteEmployee = async (id) => {\r\n    const request = await fetch(`${config.apiUrl}/employee/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'x-access-token': `${window.localStorage.getItem('accessToken')}`,\r\n      }\r\n    })\r\n\r\n    // TODO: Add error handling\r\n    // this request is repeated, put him to separate function\r\n    const fetchEmployees = await fetch(`${config.apiUrl}/employees-list`, {\r\n      headers: {\r\n        // TODO: accessToken to redux, for global sharing \r\n        'x-access-token': `${window.localStorage.getItem('accessToken')}`\r\n      }\r\n    })\r\n    const response = await fetchEmployees.json()\r\n    setEmployees(response.rows)\r\n    \r\n  }\r\n\r\n  const employeesList = employees.map(el => (\r\n    <tr key={el.id}>\r\n      <td>\r\n        <Link to={`/employee/${el.id}`}>{el.name}</Link>\r\n      </td>\r\n      <td>{el.position}</td>\r\n      <td>{el.salary}</td>\r\n      <td>{el.start_working_at}</td>\r\n      <td>{el.work_days}</td>\r\n      <td>\r\n        <span className=\"employees-table__content\">\r\n          {el.out_days}\r\n        </span>\r\n        <button\r\n          type=\"button\" \r\n          onClick={() => deleteEmployee(el.id)}\r\n          className=\"employees-table__delete btn-floating btn-middle waves-effect waves-light\"\r\n        >\r\n          <i className=\"material-icons\">delete</i>\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  ))\r\n\r\n  return (\r\n    <div className=\"employees-list-wrap\">\r\n      <h1 className=\"center-align\">Employees list</h1>\r\n      <table className=\"striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Position</th>\r\n            <th>Salary</th>\r\n            <th>Start working at</th>\r\n            <th>Work days</th>\r\n            <th>Out days</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employeesList}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EmployeesList","import React, { useState, useEffect } from 'react'\r\nimport './Profile.sass'\r\nimport { config } from '../../config'\r\n\r\nconst Profile = (props) => {\r\n    const [profileData, setProfileData] = useState({\r\n        name: '',\r\n        position: '',\r\n        salary: '',\r\n        start_working_at: '',\r\n        work_days: '',\r\n        out_days: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const userId = props.match.params.id\r\n            const data = await fetch(`${config.apiUrl}/employee/${userId}`, {\r\n                headers: {\r\n                    'x-access-token': `${window.localStorage.getItem('accessToken')}`\r\n                }\r\n            })\r\n            const response = await data.json()\r\n            setProfileData(state => ({\r\n                name: response.name,\r\n                position: response.position,\r\n                salary: response.salary,\r\n                start_working_at: response.start_working_at,\r\n                work_days: response.work_days,\r\n                out_days: response.out_days\r\n            }))\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    const editField = (e) => {\r\n        e.target.closest('.profile-data-list__item').querySelector('.profile-data-list__inner').classList.toggle('profile-data-list__inner_active')\r\n    }\r\n    const inputHandler = (e) => {\r\n        e.persist()\r\n\r\n        const property = e.target.id\r\n        setProfileData((state => {\r\n            return {\r\n                ...state, \r\n                [property]: e.target.value\r\n            }\r\n        }))\r\n    }\r\n    const sendEmployeeData = async () => {\r\n        const userId = props.match.params.id\r\n        const payload = JSON.stringify(profileData)\r\n        const request = await fetch(`${config.apiUrl}/employee/${userId}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'x-access-token': `${window.localStorage.getItem('accessToken')}`,\r\n                'Content-Type': 'application/json'\r\n\r\n            },\r\n            body: payload\r\n        })\r\n        const response = await request.json()\r\n        console.log(response)\r\n    }\r\n\r\n    return (\r\n        <div className=\"profile\">\r\n            <ul className=\"profile-data-list collection\">\r\n                <li className=\"profile-data-list__item collection-item\">\r\n                    <div className=\"profile-data-list__inner\">\r\n                        <span className=\"profile-data-list__content\">\r\n                            {profileData.name}\r\n                        </span>\r\n                        <div className=\"profile-input-field input-field col s6\">\r\n                            <input \r\n                                id=\"name\" \r\n                                type=\"text\" \r\n                                placeholder=\" \"\r\n                                value={profileData.name}\r\n                                onChange={inputHandler} \r\n                                className=\"profile-data-list__input\" \r\n                            />\r\n                            <label htmlFor=\"name\">Name</label>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={editField} \r\n                        className=\"profile-data-list__edit btn-floating btn-middle waves-effect waves-light\" \r\n                    >\r\n                        <i className=\"material-icons\">edit</i>\r\n                    </button>\r\n                </li>\r\n                <li className=\"profile-data-list__item collection-item\">\r\n                    <div className=\"profile-data-list__inner\">\r\n                        <span className=\"profile-data-list__content\">\r\n                            {profileData.position}\r\n                        </span>\r\n                        <div className=\"profile-input-field input-field col s6\">\r\n                            <input \r\n                                id=\"position\" \r\n                                type=\"text\" \r\n                                placeholder=\"\"\r\n                                value={profileData.position}\r\n                                onChange={inputHandler} \r\n                                className=\"profile-data-list__input\" \r\n                            />\r\n                            <label htmlFor=\"position\">Position</label>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={editField} \r\n                        className=\"profile-data-list__edit btn-floating btn-middle waves-effect waves-light\" \r\n                    >\r\n                        <i className=\"material-icons\">edit</i>\r\n                    </button>\r\n                </li>\r\n                <li className=\"profile-data-list__item collection-item\">\r\n                    <div className=\"profile-data-list__inner\">\r\n                        <span className=\"profile-data-list__content\">\r\n                            {profileData.salary}\r\n                        </span>\r\n                        <div className=\"profile-input-field input-field col s6\">\r\n                            <input \r\n                                id=\"salary\" \r\n                                type=\"text\" \r\n                                placeholder=\"\"\r\n                                value={profileData.salary}\r\n                                onChange={inputHandler} \r\n                                className=\"profile-data-list__input\" \r\n                            />\r\n                            <label htmlFor=\"salary\">Salary</label>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={editField} \r\n                        className=\"profile-data-list__edit btn-floating btn-middle waves-effect waves-light\" \r\n                    >\r\n                        <i className=\"material-icons\">edit</i>\r\n                    </button>\r\n                </li>\r\n                <li className=\"profile-data-list__item collection-item\">\r\n                    <div className=\"profile-data-list__inner\">\r\n                        <span className=\"profile-data-list__content\">\r\n                            {profileData.start_working_at}\r\n                        </span>\r\n                        <div className=\"profile-input-field input-field col s6\">\r\n                            <input \r\n                                id=\"start_working_at\" \r\n                                type=\"text\" \r\n                                placeholder=\"\"\r\n                                value={profileData.start_working_at}\r\n                                onChange={inputHandler} \r\n                                className=\"profile-data-list__input\" \r\n                            />\r\n                            <label htmlFor=\"start_working_at\">Start working at</label>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={editField} \r\n                        className=\"profile-data-list__edit btn-floating btn-middle waves-effect waves-light\" \r\n                    >\r\n                        <i className=\"material-icons\">edit</i>\r\n                    </button>\r\n                </li>\r\n                <li className=\"profile-data-list__item collection-item\">\r\n                    <div className=\"profile-data-list__inner\">\r\n                        <span className=\"profile-data-list__content\">\r\n                            {profileData.work_days}\r\n                        </span>\r\n                        <div className=\"profile-input-field input-field col s6\">\r\n                            <input \r\n                                id=\"work_days\" \r\n                                type=\"text\" \r\n                                placeholder=\"\"\r\n                                value={profileData.work_days}\r\n                                onChange={inputHandler} \r\n                                className=\"profile-data-list__input\" \r\n                            />\r\n                            <label htmlFor=\"work_days\">Work days</label>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={editField} \r\n                        className=\"profile-data-list__edit btn-floating btn-middle waves-effect waves-light\" \r\n                    >\r\n                        <i className=\"material-icons\">edit</i>\r\n                    </button>\r\n                </li>\r\n                <li className=\"profile-data-list__item collection-item\">\r\n                    <div className=\"profile-data-list__inner\">\r\n                        <span className=\"profile-data-list__content\">\r\n                            {profileData.out_days}\r\n                        </span>\r\n                        <div className=\"profile-input-field input-field col s6\">\r\n                            <input \r\n                                id=\"out_days\" \r\n                                type=\"text\" \r\n                                placeholder=\"\"\r\n                                value={profileData.out_days}\r\n                                onChange={inputHandler} \r\n                                className=\"profile-data-list__input\" \r\n                            />\r\n                            <label htmlFor=\"out_days\">Out days</label>\r\n                        </div>\r\n                    </div>\r\n                    <button \r\n                        type=\"button\"\r\n                        onClick={editField} \r\n                        className=\"profile-data-list__edit btn-floating btn-middle waves-effect waves-light\" \r\n                    >\r\n                        <i className=\"material-icons\">edit</i>\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n            <button \r\n                type=\"button\" \r\n                onClick={sendEmployeeData}\r\n                className=\"profile__send-btn btn waves-effect waves-light\" \r\n            >\r\n                Submit\r\n                <i className=\"material-icons right\">send</i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\nimport './App.sass'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\nimport ErrorBoundary from './components/ErrorBoundary/ErrorBoundary'\n\nimport Header from './components/Header/Header'\nimport Main from './views/Main/Main'\nimport SignIn from './views/SignIn/SignIn'\nimport SignUp from './views/SignUp/SignUp'\nimport CreateEmployee from './views/CreateEmployee/CreateEmployee'\nimport EmployeesList from './views/EmployeesList/EmployeesList'\nimport Profile from './views/Profile/Profile'\n\n\nconst App = () => (\n  <Router>\n    <Header />\n    <div className=\"container\">\n      <Switch>\n        {/* TODO: protect auth routes */}\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/sign-in\" component={SignIn} />\n          <Route path=\"/sign-up\" component={SignUp} />\n          <Route path=\"/create-employee\" component={CreateEmployee} />\n          <ErrorBoundary>\n            <Route path=\"/employees-table\" component={EmployeesList} />\n          </ErrorBoundary>\n          <Route path=\"/employee/:id\" component={Profile} />\n      </Switch>\n    </div>\n  </Router>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('content'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}